#Natalie Hannoush
#Prof. Jackson Henry
#ISU: RPS Computational Game Theory on Network
#Side quest: project euler -- Problem 2

#Start date:
#9/5/2025
#16:13

#End date:
#9/5/2025
#17:03

#Problem 2: Even Fibonacci Numbers
#Each new term in the Fibonacci sequencey is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms. 

#n = 1

def fib_sq():
    four_mil_fib_sq = [1]
    def first_fib_sq_eq(n):
        return(four_mil_fib_sq[-1] + four_mil_fib_sq[-1])
    def fib_sq_eq(n):
        return(four_mil_fib_sq[-1] + four_mil_fib_sq[-2])
    for n in four_mil_fib_sq:
        if n > 4000000:
            break
        elif n == 1:
            n = (first_fib_sq_eq(n))
            four_mil_fib_sq.append(n)
        else:
            n = (fib_sq_eq(n))
            four_mil_fib_sq.append(n)
#            four_mil_fib_sq.append(n = n + n)
    even_fib_sq = []
    for n in four_mil_fib_sq:
        if (n % 2) == 0:
            even_fib_sq.append(n)
        else:
            pass
    total = sum(even_fib_sq)
    print(total)
fib_sq()
